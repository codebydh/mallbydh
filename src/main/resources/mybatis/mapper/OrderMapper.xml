<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mallbydh.order.OrderMapper">

    <insert id="insertOrder" parameterType="com.project.mallbydh.order.OrderVO" useGeneratedKeys="true" keyProperty="ord_code">
        insert into
            order_tbl(u_id, recipient_name, recipient_phone, delivery_zipcode, delivery_addr, delivery_addr_detail, ord_price, delivery_message, ord_name, ord_status)
        values
            (#{u_id}, #{recipient_name}, #{recipient_phone}, #{delivery_zipcode}, #{delivery_addr}, #{delivery_addr_detail}, #{ord_price}, #{delivery_message}, #{ord_name}, #{ord_status})
    </insert>

    <insert id="insertOrderDetail" parameterType="com.project.mallbydh.order.OrderDetailVO">
        insert into
            orderdetail_tbl(ord_code, prod_id, ordt_amount, ordt_price)
        values
            (#{ord_code}, #{prod_id}, #{ordt_amount}, #{ordt_price})
    </insert>

    <select id="getOrderByOrdCode" resultType="Integer">
        select
            ord_code
        from
            order_tbl
        where
            ord_code = ${ord_code}
    </select>

    <select id="getOrdersByUserId" resultType="com.project.mallbydh.order.OrderVO">
        SELECT o.*,
                first_prod.prod_uploadfolder,
                first_prod.prod_img
        FROM order_tbl o
                LEFT JOIN payment_tbl p ON o.ord_code = p.ord_code
                LEFT JOIN delivery_tbl d ON o.ord_code = d.ord_code
                LEFT JOIN (
            SELECT od.ord_code, p.prod_uploadfolder, p.prod_img
            FROM (
                        SELECT ord_code, prod_id,
                        ROW_NUMBER() OVER (PARTITION BY ord_code ORDER BY prod_id) as rn
                        FROM orderdetail_tbl
                ) od
                        JOIN product_tbl p ON od.prod_id = p.prod_id
            WHERE od.rn = 1
        ) first_prod ON o.ord_code = first_prod.ord_code
        WHERE o.u_id = #{u_id}
        <if test="cri.startDate != null and cri.startDate != ''">
            AND o.ord_date >= #{cri.startDate}
        </if>
        <if test="cri.endDate != null and cri.endDate != ''">
            AND o.ord_date &lt;= #{cri.endDate}
        </if>
        ORDER BY o.ord_date DESC
        LIMIT #{cri.pageStart}, #{cri.perPageNum}
    </select>


    <select id="getOrderCountByUserId" resultType="int">
        SELECT
            count(*)
        FROM
            order_tbl
        WHERE
            u_id = #{u_id}
        <if test="cri.startDate != null and cri.startDate != ''">
            AND ord_date >= #{cri.startDate}
        </if>
        <if test="cri.endDate != null and cri.endDate != ''">
            AND ord_date &lt;= #{cri.endDate}
        </if>
    </select>

    <select id="getOrderDetailInfo" resultType="map">
        SELECT
            o.*,
            od.*, od.ordt_amount * od.ordt_price as subtotal,
            p.prod_name, p.prod_maker, p.prod_uploadfolder, p.prod_img,
            pay.payment_method, pay.payment_price, pay.payment_status, pay.payment_date,
            pay.account_info, pay.deposit_name
        FROM order_tbl o
                 INNER JOIN orderdetail_tbl od ON o.ORD_CODE = od.ORD_CODE
                 INNER JOIN product_tbl p ON od.PROD_ID = p.PROD_ID
                 LEFT JOIN payment_tbl pay ON o.ORD_CODE = pay.ORD_CODE
        WHERE o.ORD_CODE = #{ord_code}
    </select>

    <update id="cancelOrder">
        update
            order_tbl
        set
            ord_status = '주문취소'
        where
            ord_code = #{ord_code}
    </update>

    <select id="userTotalAmount" resultType="Integer">
        select
            sum(ord_price) as totalAmount
        from
            order_tbl
        where
            u_id = #{u_id}
            and ord_status NOT IN ('주문취소', '입금대기')
    </select>

</mapper>